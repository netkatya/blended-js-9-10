{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/tasks.js","../src/js/render-tasks.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.header-form'),\n  taskList: document.querySelector('.tasks-list'),\n};","const STORAGE_KEY = 'tasks';\n\nexport function saveTasks(tasks) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));\n}\n\nexport function loadTasks() {\n  const stored = localStorage.getItem(STORAGE_KEY);\n  return stored ? JSON.parse(stored) : [];\n}","import { saveTasks, loadTasks } from \"./local-storage-api\";\n\nlet tasks = loadTasks();\n\nexport function getTasks() {\n  return tasks;\n}\n\nexport function addTask(task) {\n  tasks.push(task);\n  saveTasks(tasks);\n}\n\nexport function removeTask(id) {\n  tasks = tasks.filter(task => task.id !== id);\n  saveTasks(tasks);\n}","import { refs } from './refs.js';\nimport { removeTask } from './tasks.js';\n\nexport function renderTask(task) {\n  const li = document.createElement('li');\n  li.className = 'task-list-item';\n  li.dataset.id = task.id;\n    li.innerHTML = `\n    <button class=\"task-list-item-btn\">Delete</button>\n    <h3>${task.title}</h3>\n    <p>${task.description}</p>\n  `;\n\n  refs.taskList.appendChild(li);\n}\n\nexport function renderAllTasks(tasks) {\n  refs.taskList.innerHTML = '';\n  tasks.forEach(renderTask);\n}\n\nexport function handleTaskDelete(e) {\n  if (!e.target.classList.contains('task-list-item-btn')) return;\n\n  const li = e.target.closest('.task-list-item');\n  const id = li.dataset.id;\n  removeTask(id);\n  li.remove();\n}","export function themeToggler() {\n    const themeButton = document.querySelector(\".theme-toggle-button\")\n\n    const savedTheme = localStorage.getItem(\"Theme\");\n\n        if (savedTheme === \"dark\") {\n        document.body.classList.replace(\"theme-dark\", \"theme-light\");\n        } else if (savedTheme === \"light\") {\n        document.body.classList.add(\"theme-light\", \"theme-dark\");\n    }\n\n    themeButton.addEventListener(\"click\", event => {\n        if (document.body.classList.contains(\"theme-dark\")) {\n            document.body.classList.replace(\"theme-dark\", \"theme-light\")\n            localStorage.setItem(\"Theme\", \"light\");\n        } else {\n            document.body.classList.replace(\"theme-light\", \"theme-dark\") \n            localStorage.setItem(\"Theme\", \"dark\");\n        }\n    });\n}\n\n\n\n\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport { refs } from './js/refs.js';\nimport { getTasks, addTask } from './js/tasks.js';\nimport { renderAllTasks, renderTask, handleTaskDelete } from './js/render-tasks.js';\nimport { themeToggler } from './js/theme-switcher.js';\n\nthemeToggler();\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.taskList.addEventListener('click', handleTaskDelete);\n\n\nrenderAllTasks(getTasks());\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const title = e.target.elements.taskName.value.trim();\n  const description = e.target.elements.taskDescription.value.trim();\n  if (!title) return;\n\n  const task = {\n    id: Date.now().toString(),\n    title,\n    description,\n  };\n\n  addTask(task);\n  renderTask(task);\n  refs.form.reset();\n}\n"],"names":["refs","STORAGE_KEY","saveTasks","tasks","loadTasks","stored","getTasks","addTask","task","removeTask","id","renderTask","li","renderAllTasks","handleTaskDelete","themeToggler","themeButton","savedTheme","event","onFormSubmit","title","description"],"mappings":"ssBAAO,MAAMA,EAAO,CAClB,KAAM,SAAS,cAAc,cAAc,EAC3C,SAAU,SAAS,cAAc,aAAa,CAChD,ECHMC,EAAc,QAEb,SAASC,EAAUC,EAAO,CAC/B,aAAa,QAAQF,EAAa,KAAK,UAAUE,CAAK,CAAC,CACzD,CAEO,SAASC,GAAY,CAC1B,MAAMC,EAAS,aAAa,QAAQJ,CAAW,EAC/C,OAAOI,EAAS,KAAK,MAAMA,CAAM,EAAI,CAAA,CACvC,CCPA,IAAIF,EAAQC,EAAS,EAEd,SAASE,GAAW,CACzB,OAAOH,CACT,CAEO,SAASI,EAAQC,EAAM,CAC5BL,EAAM,KAAKK,CAAI,EACfN,EAAUC,CAAK,CACjB,CAEO,SAASM,EAAWC,EAAI,CAC7BP,EAAQA,EAAM,OAAOK,GAAQA,EAAK,KAAOE,CAAE,EAC3CR,EAAUC,CAAK,CACjB,CCbO,SAASQ,EAAWH,EAAM,CAC/B,MAAMI,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,iBACfA,EAAG,QAAQ,GAAKJ,EAAK,GACnBI,EAAG,UAAY;AAAA;AAAA,UAETJ,EAAK,KAAK;AAAA,SACXA,EAAK,WAAW;AAAA,IAGvBR,EAAK,SAAS,YAAYY,CAAE,CAC9B,CAEO,SAASC,EAAeV,EAAO,CACpCH,EAAK,SAAS,UAAY,GAC1BG,EAAM,QAAQQ,CAAU,CAC1B,CAEO,SAASG,EAAiB,EAAG,CAClC,GAAI,CAAC,EAAE,OAAO,UAAU,SAAS,oBAAoB,EAAG,OAExD,MAAMF,EAAK,EAAE,OAAO,QAAQ,iBAAiB,EACvCF,EAAKE,EAAG,QAAQ,GACtBH,EAAWC,CAAE,EACbE,EAAG,OAAM,CACX,CC5BO,SAASG,GAAe,CAC3B,MAAMC,EAAc,SAAS,cAAc,sBAAsB,EAE3DC,EAAa,aAAa,QAAQ,OAAO,EAEvCA,IAAe,OACnB,SAAS,KAAK,UAAU,QAAQ,aAAc,aAAa,EAChDA,IAAe,SAC1B,SAAS,KAAK,UAAU,IAAI,cAAe,YAAY,EAG3DD,EAAY,iBAAiB,QAASE,GAAS,CACvC,SAAS,KAAK,UAAU,SAAS,YAAY,GAC7C,SAAS,KAAK,UAAU,QAAQ,aAAc,aAAa,EAC3D,aAAa,QAAQ,QAAS,OAAO,IAErC,SAAS,KAAK,UAAU,QAAQ,cAAe,YAAY,EAC3D,aAAa,QAAQ,QAAS,MAAM,EAEhD,CAAK,CACL,CCEAH,IAEAf,EAAK,KAAK,iBAAiB,SAAUmB,CAAY,EACjDnB,EAAK,SAAS,iBAAiB,QAASc,CAAgB,EAGxDD,EAAeP,EAAU,CAAA,EAEzB,SAASa,EAAa,EAAG,CACvB,EAAE,eAAc,EAEhB,MAAMC,EAAQ,EAAE,OAAO,SAAS,SAAS,MAAM,OACzCC,EAAc,EAAE,OAAO,SAAS,gBAAgB,MAAM,OAC5D,GAAI,CAACD,EAAO,OAEZ,MAAMZ,EAAO,CACX,GAAI,KAAK,IAAK,EAAC,SAAU,EACzB,MAAAY,EACA,YAAAC,CACJ,EAEEd,EAAQC,CAAI,EACZG,EAAWH,CAAI,EACfR,EAAK,KAAK,OACZ"}